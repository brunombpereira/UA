Archive member included because of file (symbol)

/opt/pic32mx/lib/libxcpp.a(putc.o)
                              ex1.o (putc)
/opt/pic32mx/lib/libxcpp.a(fputc.o)
                              /opt/pic32mx/lib/libxcpp.a(putc.o) (fputc)
/opt/pic32mx/lib/libxcpp.a(xfwprep.o)
                              /opt/pic32mx/lib/libxcpp.a(fputc.o) (_Fwprep)
/opt/pic32mx/lib/libxcpp.a(fclose.o)
                              /opt/pic32mx/lib/libxcpp.a(xfwprep.o) (_Closreg)
/opt/pic32mx/lib/libxcpp.a(fflush.o)
                              /opt/pic32mx/lib/libxcpp.a(fputc.o) (fflush)
/opt/pic32mx/lib/libxcpp.a(free.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (free)
/opt/pic32mx/lib/libxcpp.a(malloc.o)
                              /opt/pic32mx/lib/libxcpp.a(xfwprep.o) (malloc)
/opt/pic32mx/lib/libxcpp.a(remove.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (remove)
/opt/pic32mx/lib/libxcpp.a(xatexit.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (_Atexit)
/opt/pic32mx/lib/libxcpp.a(xfiles.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (_Files)
/opt/pic32mx/lib/libxcpp.a(xfofind.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (_Fofree)
/opt/pic32mx/lib/libxcpp.a(xgetmem.o)
                              /opt/pic32mx/lib/libxcpp.a(malloc.o) (_Getmem)
/opt/pic32mx/lib/libxcpp.a(abort.o)
                              /opt/pic32mx/lib/libxcpp.a(xatexit.o) (abort)
/opt/pic32mx/lib/libxcpp.a(errno.o)
                              /opt/pic32mx/lib/libxcpp.a(fclose.o) (_Errno)
/opt/pic32mx/lib/libxcpp.a(exit.o)
                              /opt/pic32mx/lib/libxcpp.a(xatexit.o) (_Atrealloc)
/opt/pic32mx/lib/libxcpp.a(memcpy.o)
                              /opt/pic32mx/lib/libxcpp.a(exit.o) (memcpy)
/opt/pic32mx/lib/libxcpp.a(raise.o)
                              /opt/pic32mx/lib/libxcpp.a(abort.o) (raise)
/opt/pic32mx/lib/libxcpp.a(xexit.o)
                              /opt/pic32mx/lib/libxcpp.a(exit.o) (_Exit)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400          0xec8        3784  Application's executable code 
.rodata                 0x9d0022c8           0x18          24  Read-only constant data 
.data                   0x9d0022e0          0x194         404  Data-initialization template 
.sdata                  0x9d002474           0x18          24  Small data-initialization template 
      Total kseg0_program_mem used  :      0x108c        4236  0.8% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
          Total exception_mem used  :        0x14          20  0.5% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x1350        4944  0.9% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x194         404  Initialized data 
.sdata                  0xa0000194           0x18          24  Small initialized data 
.sbss                   0xa00001ac           0x14          20  Small uninitialized data 
.bss                    0xa00001c0          0x154         340  Uninitialized data 
.stack                  0xa0000318         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x2314        8980  6.9% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x2314        8980  6.9% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD ex1.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x0
 *(.vector_7)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x0
 *(.vector_8)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x0
 *(.vector_19)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400      0xec8
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400       0xd4 ex1.o
                0x000000009d001400                main
                0x000000009d0014a8                putc1
 .text.putc     0x000000009d0014d4       0x1c /opt/pic32mx/lib/libxcpp.a(putc.o)
                0x000000009d0014d4                putc
 .text.fputc    0x000000009d0014f0       0xc0 /opt/pic32mx/lib/libxcpp.a(fputc.o)
                0x000000009d0014f0                fputc
 .text._Fwprep  0x000000009d0015b0      0x154 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
                0x000000009d0015b0                _Fwprep
 .text._Closreg
                0x000000009d001704       0x3c /opt/pic32mx/lib/libxcpp.a(fclose.o)
                0x000000009d001704                _Closreg
 .text.fclose   0x000000009d001740       0xf4 /opt/pic32mx/lib/libxcpp.a(fclose.o)
                0x000000009d001740                fclose
 .text.closeall
                0x000000009d001834       0x68 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .text.fflush   0x000000009d00189c      0x160 /opt/pic32mx/lib/libxcpp.a(fflush.o)
                0x000000009d00189c                fflush
 .text.free     0x000000009d0019fc       0xec /opt/pic32mx/lib/libxcpp.a(free.o)
                0x000000009d0019fc                free
 .text.malloc   0x000000009d001ae8      0x1f4 /opt/pic32mx/lib/libxcpp.a(malloc.o)
                0x000000009d001ae8                malloc
 .text.remove   0x000000009d001cdc       0x3c /opt/pic32mx/lib/libxcpp.a(remove.o)
                0x000000009d001cdc                remove
 .text._Atexit  0x000000009d001d18       0x98 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
                0x000000009d001d18                _Atexit
 .text._Fofind  0x000000009d001db0       0xb4 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
                0x000000009d001db0                _Fofind
 .text._Fofree  0x000000009d001e64       0xa4 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
                0x000000009d001e64                _Fofree
 .text._Getmem  0x000000009d001f08       0x38 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
                0x000000009d001f08                _Getmem
 .text.abort    0x000000009d001f40       0x18 /opt/pic32mx/lib/libxcpp.a(abort.o)
                0x000000009d001f40                abort
 .text._Geterrno
                0x000000009d001f58       0x30 /opt/pic32mx/lib/libxcpp.a(errno.o)
                0x000000009d001f58                _Geterrno
 .text._Atrealloc
                0x000000009d001f88       0xe8 /opt/pic32mx/lib/libxcpp.a(exit.o)
                0x000000009d001f88                _Atrealloc
 .text.atexit   0x000000009d002070       0x74 /opt/pic32mx/lib/libxcpp.a(exit.o)
                0x000000009d002070                atexit
 .text.exit     0x000000009d0020e4       0xd0 /opt/pic32mx/lib/libxcpp.a(exit.o)
                0x000000009d0020e4                exit
 .text.memcpy   0x000000009d0021b4       0x2c /opt/pic32mx/lib/libxcpp.a(memcpy.o)
                0x000000009d0021b4                memcpy
 .text.raise    0x000000009d0021e0       0x28 /opt/pic32mx/lib/libxcpp.a(raise.o)
                0x000000009d0021e0                raise
 .text._Exit    0x000000009d002208       0x10 /opt/pic32mx/lib/libxcpp.a(xexit.o)
                0x000000009d002208                _Exit
 .text          0x000000009d002218       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d002288                printStr
                0x000000009d002268                printInt
                0x000000009d002248                readInt
                0x000000009d0022c0                resetCoreTimer
                0x000000009d002238                putChar
                0x000000009d002298                readStr
                0x000000009d0022a8                exxt
                0x000000009d002278                printInt10
                0x000000009d002218                inkey
                0x000000009d002228                getChar
                0x000000009d002258                readInt10
                0x000000009d0022b8                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d0022c8                _text_end = .

.rodata         0x000000009d0022c8       0x18
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000009d0022c8       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d0022e0                . = ALIGN (0x4)
 *fill*         0x000000009d0022dd        0x3 00

.sdata2         0x000000009d0022e0        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d0022e0                . = ALIGN (0x4)

.sbss2          0x000000009d0022e0        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d0022e0                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x194 load address 0x000000009d0022e0
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000      0x190 /opt/pic32mx/lib/libxcpp.a(xfiles.o)
                0x00000000a000004c                _Stdout
                0x00000000a00000e4                _Files
                0x00000000a0000000                _Stdin
                0x00000000a0000098                _Stderr
                0x00000000a0000134                _PJP_C_Copyright
 .data          0x00000000a0000190        0x4 /opt/pic32mx/lib/libxcpp.a(exit.o)
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d0022e0                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a0008190                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a0000194       0x18 load address 0x000000009d002474
                0x00000000a0000194                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a0000194        0x4 /opt/pic32mx/lib/libxcpp.a(malloc.o)
                0x00000000a0000194                _Size_block
 .sdata         0x00000000a0000198        0xc /opt/pic32mx/lib/libxcpp.a(xfiles.o)
                0x00000000a000019c                stdout
                0x00000000a0000198                stdin
                0x00000000a00001a0                stderr
 .sdata         0x00000000a00001a4        0x8 /opt/pic32mx/lib/libxcpp.a(exit.o)
                0x00000000a00001a4                _Atfuns
                0x00000000a00001a8                _Atcount
                0x00000000a00001ac                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a00001ac                . = ALIGN (0x4)
                0x00000000a00001ac                _data_end = .
                0x00000000a00001ac                _bss_begin = .

.sbss           0x00000000a00001ac       0x14
                0x00000000a00001ac                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a00001ac        0x8 /opt/pic32mx/lib/libxcpp.a(malloc.o)
                0x00000000a00001ac                _Aldata
 .sbss          0x00000000a00001b4        0x8 /opt/pic32mx/lib/libxcpp.a(errno.o)
                0x00000000a00001b8                _Tls_setup__Errno
                0x00000000a00001b4                _Errno
 .sbss          0x00000000a00001bc        0x4 /opt/pic32mx/lib/libxcpp.a(exit.o)
                0x00000000a00001bc                _Atcount0
 *(.scommon)
                0x00000000a00001c0                _sbss_end = .

.bss            0x00000000a00001c0      0x154
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a00001c0        0x1 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 *fill*         0x00000000a00001c1        0x3 00
 .bss           0x00000000a00001c4       0x10 /opt/pic32mx/lib/libxcpp.a(xfiles.o)
 .bss           0x00000000a00001d4      0x140 /opt/pic32mx/lib/libxcpp.a(exit.o)
 *(COMMON)
                0x00000000a0000314                . = ALIGN (0x4)
                0x00000000a0000314                . = ALIGN (0x4)
                0x00000000a0000314                _end = .
                0x00000000a0000314                _bss_end = .

.persist        0x00000000a0000314        0x0
 *(.persist)
                0x00000000a0000314                . = ALIGN (0x4)

.heap           0x00000000a0000314        0x0
                0x00000000a0000314                _heap = .
                0x00000000a0000314                . = (. + _min_heap_size)

.stack          0x00000000a0000318     0x2000
                0x00000000a0000318                _splim = .
                0x00000000a0000318                _SPLIM = .
                0x00000000a0002318                . = (. + _min_stack_size)
 *fill*         0x00000000a0000318     0x2000 00

.ramfunc        0x00000000a0002800        0x0 load address 0x000000009d00248c
                0x00000000a0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0002800                . = ALIGN (0x4)
                0x00000000a0002800                _ramfunc_end = .
                0x000000009d00248c                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x300
 *(.pdr)
 .pdr           0x0000000000000000       0x40 ex1.o
 .pdr           0x0000000000000040       0x20 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .pdr           0x0000000000000060       0x20 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .pdr           0x0000000000000080       0x20 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .pdr           0x00000000000000a0       0x60 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .pdr           0x0000000000000100       0x20 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .pdr           0x0000000000000120       0x20 /opt/pic32mx/lib/libxcpp.a(free.o)
 .pdr           0x0000000000000140       0x20 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .pdr           0x0000000000000160       0x20 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .pdr           0x0000000000000180       0x20 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .pdr           0x00000000000001a0       0x40 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .pdr           0x00000000000001e0       0x20 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .pdr           0x0000000000000200       0x20 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .pdr           0x0000000000000220       0x20 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .pdr           0x0000000000000240       0x60 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .pdr           0x00000000000002a0       0x20 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .pdr           0x00000000000002c0       0x20 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .pdr           0x00000000000002e0       0x20 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 ex1.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x89
 *(.comment)
 .comment       0x0000000000000000       0x4d ex1.o
 .comment       0x000000000000004d       0x3c /opt/pic32mx/lib/libxcpp.a(putc.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(fputc.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(fclose.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(fflush.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(free.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(malloc.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(remove.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xfiles.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(abort.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(errno.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(exit.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(raise.o)
                                         0x3d (size before relaxing)
 .comment       0x0000000000000089        0x0 /opt/pic32mx/lib/libxcpp.a(xexit.o)
                                         0x3d (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x248
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_aranges
                0x0000000000000020       0x20 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_aranges
                0x0000000000000040       0x20 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_aranges
                0x0000000000000060       0x30 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_aranges
                0x0000000000000090       0x20 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_aranges
                0x00000000000000b0       0x20 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_aranges
                0x00000000000000d0       0x20 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_aranges
                0x00000000000000f0       0x20 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_aranges
                0x0000000000000110       0x20 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_aranges
                0x0000000000000130       0x28 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_aranges
                0x0000000000000158       0x20 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_aranges
                0x0000000000000178       0x20 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_aranges
                0x0000000000000198       0x20 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_aranges
                0x00000000000001b8       0x30 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_aranges
                0x00000000000001e8       0x20 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_aranges
                0x0000000000000208       0x20 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_aranges
                0x0000000000000228       0x20 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_pubnames
                0x0000000000000000      0x21d
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_pubnames
                0x000000000000001b       0x1c /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_pubnames
                0x0000000000000037       0x1e /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_pubnames
                0x0000000000000055       0x2a /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_pubnames
                0x000000000000007f       0x1d /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_pubnames
                0x000000000000009c       0x1b /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_pubnames
                0x00000000000000b7       0x1d /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_pubnames
                0x00000000000000d4       0x1d /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_pubnames
                0x00000000000000f1       0x1e /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_pubnames
                0x000000000000010f       0x2a /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_pubnames
                0x0000000000000139       0x1e /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_pubnames
                0x0000000000000157       0x1c /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_pubnames
                0x0000000000000173       0x20 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_pubnames
                0x0000000000000193       0x35 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_pubnames
                0x00000000000001c8       0x1d /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_pubnames
                0x00000000000001e5       0x1c /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_pubnames
                0x0000000000000201       0x1c /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_info     0x0000000000000000      0xbef
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0xa8 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_info    0x00000000000000a8       0xaa /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_info    0x0000000000000152       0xae /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_info    0x0000000000000200       0xe9 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_info    0x00000000000002e9       0xac /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_info    0x0000000000000395       0xa8 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_info    0x000000000000043d       0xb8 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_info    0x00000000000004f5       0xac /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_info    0x00000000000005a1       0xae /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_info    0x000000000000064f       0xc4 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_info    0x0000000000000713       0xae /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_info    0x00000000000007c1       0xaa /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_info    0x000000000000086b       0xae /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_info    0x0000000000000919       0xd6 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_info    0x00000000000009ef       0xac /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_info    0x0000000000000a9b       0xaa /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_info    0x0000000000000b45       0xaa /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_abbrev   0x0000000000000000      0x2a1
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x25 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_abbrev  0x0000000000000025       0x25 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_abbrev  0x000000000000004a       0x25 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_abbrev  0x000000000000006f       0x43 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_abbrev  0x00000000000000b2       0x25 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_abbrev  0x00000000000000d7       0x25 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_abbrev  0x00000000000000fc       0x32 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_abbrev  0x000000000000012e       0x25 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_abbrev  0x0000000000000153       0x25 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_abbrev  0x0000000000000178        0x1 /opt/pic32mx/lib/libxcpp.a(xfiles.o)
 .debug_abbrev  0x0000000000000179       0x25 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_abbrev  0x000000000000019e       0x25 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_abbrev  0x00000000000001c3       0x25 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_abbrev  0x00000000000001e8       0x25 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_abbrev  0x000000000000020d       0x25 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_abbrev  0x0000000000000232       0x25 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_abbrev  0x0000000000000257       0x25 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_abbrev  0x000000000000027c       0x25 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_line     0x0000000000000000      0x7e0
 *(.debug_line)
 .debug_line    0x0000000000000000       0x75 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_line    0x0000000000000075       0x76 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_line    0x00000000000000eb       0x78 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_line    0x0000000000000163       0x77 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_line    0x00000000000001da       0x77 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_line    0x0000000000000251       0x75 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_line    0x00000000000002c6       0x77 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_line    0x000000000000033d       0x77 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_line    0x00000000000003b4       0x78 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_line    0x000000000000042c       0x78 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_line    0x00000000000004a4       0x78 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_line    0x000000000000051c       0x76 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_line    0x0000000000000592       0x76 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_line    0x0000000000000608       0x75 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_line    0x000000000000067d       0x77 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_line    0x00000000000006f4       0x76 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_line    0x000000000000076a       0x76 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_frame    0x0000000000000000      0x354
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x28 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_frame   0x0000000000000028       0x28 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_frame   0x0000000000000050       0x2c /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_frame   0x000000000000007c       0x64 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_frame   0x00000000000000e0       0x30 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_frame   0x0000000000000110       0x20 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_frame   0x0000000000000130       0x34 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_frame   0x0000000000000164       0x28 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_frame   0x000000000000018c       0x2c /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_frame   0x00000000000001b8       0x44 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_frame   0x00000000000001fc       0x28 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_frame   0x0000000000000224       0x28 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_frame   0x000000000000024c       0x28 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_frame   0x0000000000000274       0x70 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_frame   0x00000000000002e4       0x20 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_frame   0x0000000000000304       0x28 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_frame   0x000000000000032c       0x28 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.debug_str      0x0000000000000000        0x0
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(ex1.elf elf32-tradlittlemips)

.mdebug.abi32   0x00000000a0002800        0x0

.debug_ranges   0x000000009d00248c      0x138
 .debug_ranges  0x000000009d00248c       0x10 /opt/pic32mx/lib/libxcpp.a(putc.o)
 .debug_ranges  0x000000009d00249c       0x10 /opt/pic32mx/lib/libxcpp.a(fputc.o)
 .debug_ranges  0x000000009d0024ac       0x10 /opt/pic32mx/lib/libxcpp.a(xfwprep.o)
 .debug_ranges  0x000000009d0024bc       0x20 /opt/pic32mx/lib/libxcpp.a(fclose.o)
 .debug_ranges  0x000000009d0024dc       0x10 /opt/pic32mx/lib/libxcpp.a(fflush.o)
 .debug_ranges  0x000000009d0024ec       0x10 /opt/pic32mx/lib/libxcpp.a(free.o)
 .debug_ranges  0x000000009d0024fc       0x10 /opt/pic32mx/lib/libxcpp.a(malloc.o)
 .debug_ranges  0x000000009d00250c       0x10 /opt/pic32mx/lib/libxcpp.a(remove.o)
 .debug_ranges  0x000000009d00251c       0x10 /opt/pic32mx/lib/libxcpp.a(xatexit.o)
 .debug_ranges  0x000000009d00252c       0x18 /opt/pic32mx/lib/libxcpp.a(xfofind.o)
 .debug_ranges  0x000000009d002544       0x10 /opt/pic32mx/lib/libxcpp.a(xgetmem.o)
 .debug_ranges  0x000000009d002554       0x10 /opt/pic32mx/lib/libxcpp.a(abort.o)
 .debug_ranges  0x000000009d002564       0x10 /opt/pic32mx/lib/libxcpp.a(errno.o)
 .debug_ranges  0x000000009d002574       0x20 /opt/pic32mx/lib/libxcpp.a(exit.o)
 .debug_ranges  0x000000009d002594       0x10 /opt/pic32mx/lib/libxcpp.a(memcpy.o)
 .debug_ranges  0x000000009d0025a4       0x10 /opt/pic32mx/lib/libxcpp.a(raise.o)
 .debug_ranges  0x000000009d0025b4       0x10 /opt/pic32mx/lib/libxcpp.a(xexit.o)

.rel.dyn        0x000000009d0025c4        0x0
