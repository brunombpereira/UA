// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/29/2022 21:35:36"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Bit_Parallel_Adder_eight_bits
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Bit_Parallel_Adder_eight_bits_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A0;
reg A1;
reg A2;
reg A3;
reg A4;
reg A5;
reg A6;
reg A7;
reg B0;
reg B1;
reg B2;
reg B3;
reg B4;
reg B5;
reg B6;
reg B7;
reg C;
// wires                                               
wire C1;
wire S0;
wire S1;
wire S2;
wire S3;
wire S4;
wire S5;
wire S6;
wire S7;

// assign statements (if any)                          
Bit_Parallel_Adder_eight_bits i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.A4(A4),
	.A5(A5),
	.A6(A6),
	.A7(A7),
	.B0(B0),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.B4(B4),
	.B5(B5),
	.B6(B6),
	.B7(B7),
	.C(C),
	.C1(C1),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.S3(S3),
	.S4(S4),
	.S5(S5),
	.S6(S6),
	.S7(S7)
);
initial 
begin 
#1000000 $finish;
end 

// A0
initial
begin
	A0 = 1'b0;
	A0 = #50000 1'b1;
	A0 = #90000 1'b0;
	A0 = #70000 1'b1;
	A0 = #140000 1'b0;
end 

// A1
initial
begin
	A1 = 1'b0;
	A1 = #50000 1'b1;
	A1 = #90000 1'b0;
	A1 = #70000 1'b1;
	A1 = #140000 1'b0;
	A1 = #100000 1'b1;
	A1 = #90000 1'b0;
end 

// A2
initial
begin
	A2 = 1'b0;
	A2 = #50000 1'b1;
	A2 = #90000 1'b0;
	A2 = #70000 1'b1;
	A2 = #140000 1'b0;
	A2 = #100000 1'b1;
	A2 = #90000 1'b0;
end 

// A3
initial
begin
	A3 = 1'b0;
	A3 = #50000 1'b1;
	A3 = #90000 1'b0;
	A3 = #70000 1'b1;
	A3 = #140000 1'b0;
	A3 = #100000 1'b1;
	A3 = #90000 1'b0;
end 

// A4
initial
begin
	A4 = 1'b0;
	A4 = #50000 1'b1;
	A4 = #90000 1'b0;
	A4 = #70000 1'b1;
	A4 = #140000 1'b0;
	A4 = #100000 1'b1;
	A4 = #90000 1'b0;
end 

// A5
initial
begin
	A5 = 1'b0;
	A5 = #50000 1'b1;
	A5 = #90000 1'b0;
	A5 = #70000 1'b1;
	A5 = #140000 1'b0;
end 

// A6
initial
begin
	A6 = 1'b0;
	A6 = #50000 1'b1;
	A6 = #90000 1'b0;
	A6 = #70000 1'b1;
	A6 = #140000 1'b0;
end 

// A7
initial
begin
	A7 = 1'b0;
	A7 = #50000 1'b1;
	A7 = #90000 1'b0;
	A7 = #70000 1'b1;
	A7 = #140000 1'b0;
end 

// B0
initial
begin
	B0 = 1'b0;
	B0 = #50000 1'b1;
	B0 = #90000 1'b0;
	B0 = #70000 1'b1;
	B0 = #140000 1'b0;
	B0 = #120000 1'b1;
	B0 = #80000 1'b0;
end 

// B1
initial
begin
	B1 = 1'b0;
	B1 = #50000 1'b1;
	B1 = #90000 1'b0;
	B1 = #70000 1'b1;
	B1 = #140000 1'b0;
	B1 = #120000 1'b1;
	B1 = #80000 1'b0;
end 

// B2
initial
begin
	B2 = 1'b0;
	B2 = #50000 1'b1;
	B2 = #90000 1'b0;
	B2 = #70000 1'b1;
	B2 = #140000 1'b0;
	B2 = #120000 1'b1;
	B2 = #80000 1'b0;
end 

// B3
initial
begin
	B3 = 1'b0;
	B3 = #50000 1'b1;
	B3 = #90000 1'b0;
	B3 = #330000 1'b1;
	B3 = #80000 1'b0;
end 

// B4
initial
begin
	B4 = 1'b0;
	B4 = #50000 1'b1;
	B4 = #90000 1'b0;
	B4 = #330000 1'b1;
	B4 = #80000 1'b0;
end 

// B5
initial
begin
	B5 = 1'b0;
	B5 = #50000 1'b1;
	B5 = #90000 1'b0;
	B5 = #330000 1'b1;
	B5 = #80000 1'b0;
end 

// B6
initial
begin
	B6 = 1'b0;
	B6 = #50000 1'b1;
	B6 = #90000 1'b0;
end 

// B7
initial
begin
	B7 = 1'b0;
	B7 = #50000 1'b1;
	B7 = #90000 1'b0;
end 

// C
initial
begin
	C = 1'b0;
end 
endmodule

